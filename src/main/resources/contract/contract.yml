openapi: 3.0.0
info:
  title: PracaInzynierska
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Local server


tags:
  - name: user
    description: User operations
  - name: SteamGames
    description: Steam games operations
  - name: SteamReviews
    description: Steam reviews operations
  - name: GameRatings
    description: Game ratings operations

paths:
  /games:
    get:
      summary: Retrieve paginated list of Steam games
      operationId: getSteamGames
      tags:
        - SteamGames
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Paginated list of Steam games
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SteamGame'

  /games/{gameId}/ratings:
    get:
      summary: Retrieve paginated game ratings for a specific Steam game
      operationId: getGameRatings
      tags:
        - GameRatings
      parameters:
        - name: gameId
          in: path
          description: ID of the Steam game to retrieve ratings for
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: The page index (zero-based).
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Paginated list of game ratings
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GameRating'
        '404':
          description: Steam game not found
    post:
      summary: Create a new rating for a game
      operationId: createGameRating
      tags:
        - GameRatings
      parameters:
        - name: gameId
          in: path
          description: The ID of the game to rate
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Rating details
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGameRating'
      responses:
        '201':
          description: Rating successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GameRating'
        '404':
          description: Game not found

  /games/{gameId}/reviews:
    get:
      summary: Retrieve paginated reviews for a specific game
      operationId: getGameReviews
      tags:
        - SteamReviews
      parameters:
        - name: gameId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: page
          in: query
          description: The page index (zero-based).
          required: false
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          description: The number of items per page.
          required: false
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Paginated list of reviews for the specified game
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SteamReview'

components:
#  securitySchemes:
#    bearerAuth:
#      type: http
#      scheme: bearer
#      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        gender:
          type: string
        age:
          type: integer

    SteamGame:
      type: object
      properties:
        id:
          type: string
          format: uuid
        appId:
          type: integer
        title:
          type: string
        reviewsTotal:
          type: integer
        reviewsScoreFancy:
          type: string
        releaseDate:
          type: string
          format: date
        launchPrice:
          type: string
        tags:
          type: string
        steamPage:
          type: string

    SteamGameDetails:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the Steam game.
        appId:
          type: integer
          description: Unique Steam App ID of the game.
        title:
          type: string
          description: Title of the Steam game.
        reviewsTotal:
          type: integer
          description: Total number of reviews for the game.
        reviewsScoreFancy:
          type: string
          description: Fancy representation of the review score.
        releaseDate:
          type: string
          format: date
          description: Release date of the game.
        launchPrice:
          type: string
          description: Launch price of the game.
        tags:
          type: string
          description: Comma-separated tags for the game.
        steamPage:
          type: string
          description: URL to the Steam store page for the game.
        steamReviews:
          type: array
          description: List of reviews for the game.
          items:
            $ref: '#/components/schemas/SteamReview'
        gameRatings:
          type: array
          description: List of ratings for the game.
          items:
            $ref: '#/components/schemas/GameRating'

    SteamReview:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the review.
        reviewId:
          type: string
          description: Unique Steam review ID.
          example: "r12345"
        userSteamId:
          type: string
          description: Steam ID of the user who wrote the review.
          example: "76561198000000000"
        content:
          type: string
          description: Content of the review.
          example: "Amazing game with great mechanics!"
        score:
          type: integer
          description: Score given by the user in the review.
          example: 10
        timestampCreated:
          type: string
          format: date-time
          description: Timestamp when the review was created.
          example: "2023-11-29T15:30:00"
        votesUp:
          type: integer
          description: Number of upvotes for the review.
          example: 120
        votesDown:
          type: integer
          description: Number of downvotes for the review.
          example: 5

    SteamUser:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the Steam user.
        steamId:
          type: string
          description: Unique Steam ID of the user.
          example: "76561198000000000"
        steamReviews:
          type: array
          description: List of reviews written by the user.
          items:
            $ref: '#/components/schemas/SteamReview'

    GameRating:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier of the rating.
        steamGame:
          $ref: '#/components/schemas/SteamGame'
        user:
          $ref: '#/components/schemas/User'
        rating:
          type: integer
          description: The rating score given by the user.
          example: 8
        content:
          type: string
          description: Additional comments provided by the user.
          example: "Great game, had a lot of fun!"
        votesUp:
          type: integer
          description: Number of upvotes for this rating.
          example: 15
        votesDown:
          type: integer
          description: Number of downvotes for this rating.
          example: 2

    CreateGameRating:
      type: object
      properties:
        steamGameId:
          type: string
          format: uuid
          description: The ID of the Steam game to rate.
        userId:
          type: string
          format: uuid
          description: The ID of the user creating the rating.
        rating:
          type: integer
          description: Rating score (1-10).
          example: 8
        content:
          type: string
          description: User's review content.
          example: "Great game!"
